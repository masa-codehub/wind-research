# 要件定義書：風況データ収集・統合システム

概要と背景:
  プロジェクトの目的: "気象庁ウェブサイトから特定の観測地点における長期間（1年間）の10分毎風況データを自動的に収集・変換・統合し、分析に適したCSV形式で提供するコマンドラインインターフェース（CUI）ツールを開発する。"
  開発に至った背景: "手動でのデータ収集・変換作業は非効率的でヒューマンエラーが発生しやすく、長時間の処理となるため状況把握も困難である。また、データ提供元サイトへの負荷も考慮する必要がある。これらの課題を解決し、データ利用者が効率的かつ正確に風況データを活用できるようにするため、本システムの開発に至った。"
  解決したい課題:
    - "手動による風況データ収集・変換・統合の非効率性と時間的コスト。"
    - "手作業に伴うヒューマンエラー（収集漏れ、転記ミス、変換ミス）。"
    - "長期間データ収集時の処理状況の不透明性。"
    - "データ取得元ウェブサイトへの過度な負荷。"
  備考: "(TDD観点：これらの課題が解決されたことを検証可能なテストケースを想定する)\n(DDD観点：課題の背景にある「風況データ活用」というドメインのニーズを捉える)\n(Clean Architecture観点：課題解決のための本質的なビジネスロジックと、それを実現するための技術的詳細を分離して捉える)"

システム化の目的とゴール:
  達成したい具体的なビジネス目標:
    - "風況データ収集・統合に関わる作業時間を大幅に削減する。"
    - "データ収集・変換プロセスにおけるヒューマンエラーを排除する。"
    - "データ利用者が、分析に必要な風況データを迅速かつ容易に入手できるようにする。"
    - "気象庁ウェブサイトへのアクセス負荷を最小限に抑え、持続的なデータ利用を可能にする。"
  システムが満たすべき主要な成功基準:
    - "指定された地点・期間の10分毎風況データ（風向・風速関連）を正確に収集できること。"
    - "風向データを指定された数値形式（北=0度、静穏・欠損=-1）に正しく変換できること。風速データの欠損や数字以外の値は-1として処理されること。"
    - "収集・変換したデータを時系列に沿って統合し、定義されたCSV形式（UTF-8、英語ヘッダー）で出力できること。同名ファイル存在時は別名で保存すること。"
    - "コマンドラインから指定されたパラメータ（地点、期間、取得間隔など）に従って動作すること。"
    - "処理の進捗状況（現在処理中の日付と残り日数）をCUIに分かりやすく表示できること（1日処理ごと更新）。"
    - "ユーザーが設定したリクエスト間隔（デフォルト5秒、下限3秒）を遵守すること。"
    - "データ取得・解析エラー発生時は処理をスキップし（リトライ不要）、エラー履歴をログに残し、CSVには日付・時刻を残して該当データ項目は空欄とすること。"
    - "Pythonで開発され、Dockerコンテナ上で安定して動作すること。"
    - "エラー発生時は、処理完了後にログファイルの確認を促すメッセージを表示すること（エラーがなければ不要）。"
  備考: "(TDD観点：これらの成功基準は、具体的な受け入れテストの項目となる)\n(DDD観点：ビジネス目標を達成するために、ドメインエキスパート（データ利用者）が価値を感じる機能を提供することを目指す)"

スコープ定義:
  対象範囲_In_Scope: # In Scope
    - "コマンドラインインターフェースを通じた操作（パラメータ指定、実行）。"
    - "指定地点・期間の気象庁ウェブサイトからの日次風況データ（HTML）の自動取得。\n    - 対象URLの動的生成。\n    - ユーザー指定またはデフォルトのリクエスト間隔（下限3秒）の遵守。"
    - "HTML内の表構造からの10分毎風況関連データ（時刻、風向文字列、平均風速、最大瞬間風速、最大瞬間風速の風向文字列）の抽出。"
    - "風向データ（文字列）の数値（北=0度、北北東=22.5度...、静穏=-1、欠損「///」=-1）への変換。風速データの欠損や数字以外の値は-1に変換。"
    - "日次データの時系列での統合（指定期間分）。データ取得・解析エラー時は該当日のデータ項目を空欄として統合。"
    - "統合データのCSV形式（UTF-8、英語ヘッダー）でのファイル出力。同名ファイル存在時は別名保存。"
    - "データ取得・処理の進捗状況（処理中日付、残り日数）のCUIへの表示（1日処理ごと更新）。"
    - "エラー発生時のログ記録と、処理完了後のログ確認促進メッセージ表示（エラー発生時のみ）。"
    - "Python言語での開発。"
    - "Dockerコンテナ上での動作。"
  対象範囲外_Out_of_Scope: # Out of Scope
    - "グラフィカルユーザーインターフェース（GUI）の提供。"
    - "CSV形式以外のファイル出力サポート（標準機能として）。"
    - "風況データ以外の気象データ（相対湿度、日照時間、降水量、気温など）の取得・統合。"
    - "3秒未満のリクエスト間隔での動作。"
    - "データ取得・解析エラー時のリトライ処理。"
    - "取得した風況データの高度な統計分析、可視化、予測モデリング機能。"
    - "都道府県番号(prec_no)や地点番号(block_no)の探索・特定支援機能。"
    - "気象庁ウェブサイト側の仕様変更（URL構造、ページレイアウト、HTML構造など）への完全自動追従（メンテナンスは別途必要）。"
    - "気象庁ウェブサイトの利用規約に反するような過度な頻度でのアクセス（システムはこれを防ぐ設計とする）。"
    - "データの解釈や、それに基づく具体的な意思決定支援。"
    - "本システム専用以外の目的での開発環境（Dockerイメージ）の流用サポート。"
    - "設定ファイル（URLテンプレート、HTMLセレクタ等）の利用。"
    - "初回実行時の利用規約確認促進機能（エラー発生時以外）。"
    - "robots.txtファイルの解析と、それに基づく動的なアクセス制御（ファイルが存在しないため）"
    - "気象庁ウェブサイト利用規約およびdata.jma.go.jpドメインの警告文、一般的エチケットに反するアクセス方法の採用"
  備考: "(Clean Architecture観点：スコープを明確にすることで、システム境界と外部依存性を定義する)"

主要なステークホルダーと役割:
  データ利用者_User:
    役割: "システムを直接操作し、風況データを取得・利用する。システムへの入力パラメータを提供し、出力されたCSVデータと進捗表示を確認する。"
    期待: "効率的かつ正確なデータ取得、容易な操作性、処理状況の透明性、エラー発生時の適切な情報提供。"
    備考: "(DDD観点：このアクターのドメイン知識（風況データの意味、利用方法、期待するデータ形式など）が最も重要。ユビキタス言語の形成に積極的に関与してもらう必要がある)"
  開発者_当システム_Developer_This_System:
    役割: "本要件定義に基づき、システムを設計、開発、テスト、デプロイする。保守性・拡張性の高いソフトウェアを提供する。"
    期待: "明確な要件、技術選定の妥当性、テスト可能な設計。"
  気象庁ウェブサイト_Data_Source_System:
    役割: "風況データの提供元（間接的なステークホルダー）。"
    期待: "(システム側からの配慮として) サーバーへの過度な負荷をかけない適切なアクセス。"
    備考: "(DDD観点：外部システムの仕様は、我々のドメインモデルにおける重要な制約条件となる。防腐層(Anti-Corruption Layer)の設計を考慮する)"

ユースケース定義:
  ユースケース1_指定条件に基づき風況データを収集処理しCSVファイルに出力する:
    アクター: "データ利用者"
    事前条件:
      - "システム（Pythonスクリプト/Dockerコンテナ）が実行可能な環境である。"
      - "データ利用者は、取得対象の都道府県番号、地点番号、開始年月日、期間（または終了年月日）を把握している。"
      - "(オプション) データ取得間隔、出力CSVファイルパスを指定する場合は、その値を準備している。"
    事後条件:
      - "指定された期間・地点の10分毎風況データ（数値化された風向・風速を含む）が時系列に統合され、指定されたパス（またはデフォルトパス）にCSVファイルとして保存される（同名ファイル存在時は別名保存）。エラーによりスキップされた日のデータ項目は空欄となる。"
      - "処理の開始から終了までの進捗（処理中日付、残り日数）がCUIに表示される。"
      - "処理中にエラーが発生しなかった場合、正常終了のメッセージが表示される。エラーが発生した場合、エラーログが記録され、処理完了後にログ確認を促すメッセージが表示される。"
    基本フロー:
      - "データ利用者は、コマンドラインからシステムを起動し、必須パラメータおよびオプションパラメータを指定する。"
      - "システムは指定されたパラメータを検証する。"
      - "システムはCUIに進捗表示を開始する（例：「処理開始...」）。"
      - "システムは指定された期間内の各日付について、以下の処理を繰り返す：\n    a.  対象日付の気象庁ウェブサイトURLを生成する。\n    b.  TASK-ACCESS-POLICY-01で策定されたアクセス指針に基づき、定義されたドメイン別の最小アクセス間隔（ユーザー指定値がこれを下回る場合は最小値を優先）を遵守して、対象URLからHTMLコンテンツを取得する。\n    c.  CUIに現在処理中の日付と残り日数を表示する（1日処理ごと更新）。\n    d.  取得したHTMLから10分毎の風況関連データ（時刻、風向文字列、平均風速文字列など）を抽出する。\n    e.  抽出した風向文字列を、定義された数値（北=0, 北北東=22.5, ..., 静穏=-1, ///=-1）に変換する。\n    f.  抽出した風速関連文字列を数値に変換する（数字以外は-1）。\n    g.  処理した日次データを一時的に保持する。"
      - "システムは全ての日付のデータ処理が完了後、保持している全データを時系列に沿って統合する。"
      - "システムは統合したデータをCSV形式（UTF-8、英語ヘッダー）にフォーマットする。"
      - "システムはCSVデータを指定されたファイルパスに出力・保存する。出力先に同名ファイルが存在する場合、別名（例: `filename(1).csv`）で保存する。"
      - "システムはCUIに処理完了のメッセージを表示する。エラーが記録されていれば、ログファイルの確認を促すメッセージを併せて表示する。"
    代替フロー_例外フロー:
      パラメータ検証エラー:
        - "2a. システムは不正なパラメータを検知した場合、エラーメッセージをCUIに表示し、処理を中断する。"
      HTML取得_解析エラー:
        - "4.b.i. または 4.d.i. システムはHTML取得/解析時にエラーが発生した場合、エラーメッセージをCUIに表示し、当該日付のエラーをログに記録する。その日付のデータ収集・処理をスキップし、CSVファイル上では該当日の風況データ項目を空欄として次の日付の処理に進む。**リトライは行わない。**"
      CSV出力エラー:
        - "7a. システムは指定されたファイルパスへの書き込みに失敗した場合（例：権限不足、ディスク容量不足）、エラーメッセージをCUIに表示し、処理を中断する。エラーログを出力する。"
    備考: "(Clean Architecture観点：このユースケースがアプリケーションの中心的な機能。Interactor（またはUse Case Executor）として実装され、エンティティやリポジトリ（データアクセス）、プレゼンター（CUI表示）と連携する)\n(TDD観点：基本フロー、各代替フローに対してテストケースを作成する)"

ドメインモデル_初期案:
  エンティティ:
    WindDataRecord:
      ID: "(複合キー: 観測日時 + 観測地点) または UUID"
      属性:
        observed_at: "観測日時: DateTime"
        average_wind_direction: "平均風向: WindDirectionValue"
        average_wind_speed: "平均風速: WindSpeedValue"
        max_instantaneous_wind_direction: "最大瞬間風向: WindDirectionValue"
        max_instantaneous_wind_speed: "最大瞬間風速: WindSpeedValue"
      備考: "(DDD観点：個々の10分間データ。エラー時は空欄を許容するデータ構造)"
    DailyWindReport:
      ID: "(複合キー: 観測日 + 観測地点) または UUID"
      属性:
        report_date: "報告日: Date"
        observation_point: "観測地点: ObservationPointValue"
        records: "風況データレコードのリスト: List<WindDataRecord>"
      振る舞い: "add_record(), mark_as_skipped() (スキップされたことを示すフラグなど)"
  値オブジェクト:
    ObservationPointValue:
      属性:
        prefecture_no: "都道府県番号: string"
        block_no: "地点番号: string"
    DateTimeRangeValue:
      属性:
        start_datetime: "開始日時: DateTime"
        end_datetime: "終了日時: DateTime"
    WindDirectionValue:
      属性:
        degree: "角度: float, 北=0, 北北東=22.5,..., 静穏=-1, 欠損=-1"
        original_text: "元文字列: string"
      備考: "ファクトリメソッド（例：from_text(text)）で生成。静穏や「///」は-1に変換。"
    WindSpeedValue:
      属性:
        value_mps: "メートル毎秒: float, 数字以外は-1"
      備考: "ファクトリメソッド（例：from_text(text)）で生成。数字以外は-1に変換。"
  集約:
    - "DailyWindReport を集約ルートとし、WindDataRecord をその内部に含む。"
  ドメインサービス:
    WindDataConverterService: "文字列形式の風向・風速を対応するValueObjectに変換するロジック。"
  ドメインイベント:
    - "WeatherDataFetchingProcessStarted"
    - "DailyDataProcessingAttempted (引数: 対象日、成功/スキップフラグ)"
    - "WeatherDataAggregationCompleted"
    - "CsvFileGenerated (引数: ファイルパス、別名保存フラグ)"
    - "ProcessProgressUpdated (引数: 処理中日付、残り日数)"
    - "ErrorOccurredDuringProcessing (引数: エラー内容、対象日)"
  ユビキタス言語候補:
    - "風況データ, 観測地点, 期間, 10分毎データ, 日次データ, 風向, 風速, 北基準, 数値変換, CSV出力, データ取得間隔, 進捗, スキップ, エラーログ, 空欄データ"
  備考: "(DDD観点：これらのモデルと用語は、データ利用者と開発者が共通認識を持てるように継続的に改善する。)\n(Clean Architecture観点：ドメインモデルはシステムの最も内側のレイヤーに配置され、他のいかなるレイヤーにも依存しない)"

機能要件:
  FR_001_CUI:
    - "FR-001-01: 以下の必須パラメータをコマンドライン引数として受け付けること: `--prefecture_no`, `--block_no`, `--start_date`, `--days`"
    - "FR-001-02: オプションパラメータ（データ取得間隔、出力CSVファイルパス）を受け付けること。（変更なし）"
    - "FR-001-03: 必須パラメータ不足時は `argparse` のエラーメッセージを表示し終了すること。パラメータのフォーマットや値が不正な場合は、カスタムエラーメッセージを標準エラー出力に表示し、ゼロ以外のステータスコードで終了すること。"
    - "FR-001-04: ヘルプメッセージ表示オプションを提供すること。（変更なし）"
  FR_002_データ取得処理:
    - "FR-002-01: 指定期間の各日付に対応するURLを正しく生成すること。"
    - "FR-002-02: URLからHTMLコンテンツを取得すること。"
    - "FR-002-03: TASK-ACCESS-POLICY-01で策定されたアクセス指針に基づき、定義されたドメイン別の最小アクセス間隔を遵守すること。実際に適用される待機時間は、**システムのドメイン別最小間隔とユーザーが指定した間隔のうち、より長い方**となる。"
    - "FR-002-04: HTML取得エラー発生時（ネットワークエラー、HTTPエラー、またはTASK-ACCESS-POLICY-01で定義されたタイムアウトなど、サーバー負荷をかけ続けないためのエラーを含む）、エラーをログに記録し、該当日の処理をスキップすること（リトライは行わない）。"
  FR_003_データ抽出処理:
    - "FR-003-01: HTMLから10分毎の風況関連データ（時刻、風向文字列、風速文字列等）を抽出すること。"
    - "FR-003-02: HTML構造変更等で抽出失敗時、エラーをログに記録し、該当日の処理をスキップすること。抽出データ項目が欠損している場合（「///」等）は欠損として扱う。"
  FR_004_データ変換処理:
    - "FR-004-01: 風向文字列を数値（北=0, 北北東=22.5,..., 静穏=-1, 「///」=-1）に変換すること。"
    - "FR-004-02: 風速文字列を数値に変換すること。数字以外の文字列（「///」含む）は-1とすること。"
    - "FR-004-03: 定義外の風向文字列はエラー（または警告）をログに記録し、-1として扱うこと。"
  FR_005_データ統合処理:
    - "FR-005-01: 各日付の処理済みデータ（エラーでスキップされた日のデータ項目は空欄）を時系列に統合すること。"
  FR_006_CSV出力処理:
    - "FR-006-01: 統合データをUTF-8エンコーディングのCSVファイルとして出力すること。"
    - "FR-006-02: CSV1行目に英語のヘッダー行を出力すること。"
    - "FR-006-03: スキップされた日のデータは、日付・時刻列は記録し、風況データ項目は空欄とすること。"
    - "FR-006-04: 同名ファイル存在時は別名（例: `filename(1).csv`）で保存すること。"
    - "FR-006-05: ファイル書き込み失敗時はエラーメッセージを表示し終了、ログに記録すること。"
  FR_007_進捗表示処理:
    - "FR-007-01: 処理開始メッセージを表示すること。"
    - "FR-007-02: 日次データ処理ごとに、現在処理中の日付と残り日数をCUIに表示・更新すること。"
    - "FR-007-03: 処理完了メッセージを表示すること。"
    - "FR-007-04: エラー発生時は、CUIへの通常のエラーメッセージに加え、処理完了後にログファイルの確認を促すメッセージを表示すること（エラーがなければ後者は不要）。"
  FR_008_ログ出力機能:
    - "FR-008-01: 実行状況、エラー、警告を、実行時のカレントディレクトリに `wind-research.log` という名前で出力すること。"
    - "FR-008-02: コマンドラインオプション `--loglevel` でログレベル（DEBUG, INFO, WARNING, ERROR, CRITICAL）を設定可能とすること。デフォルトは `INFO` とする。"
    - "FR-008-03: (検討) ログローテーション。（変更なし）"
    - "FR-008-04: (新規) ログはコンソール（標準出力）にも同時に出力されること。"
    - "FR-008-05: (新規) `logging.error` が `exc_info=True` 付きで呼び出された場合、例外のスタックトレースがログに記録されること。"
  備考: "(TDD観点：各機能要件は、対応するユニットテスト、結合テスト、受け入れテストの対象となる。入力、期待される処理、期待される出力が明確であるため、テストケースを設計しやすい)\n(Clean Architecture観点：機能要件はアプリケーション層のユースケースとして実装される。ドメイン層のエンティティやサービスを利用し、インターフェースアダプター層を通じて外部（CUI、ファイルシステム、外部API）とやり取りする)"

非機能要件:
  性能:
    - "NFR-001: 1年分のデータ取得・処理が、進捗表示を確認しつつユーザーが過度なストレスを感じない時間内に完了すること。特定の1日分の処理でスタック（無限ループ等）しないこと。スタックしたと判断される場合（例: タイムアウト設定）、エラーとして扱いスキップ処理を行うこと。"
    - "NFR-002: データ取得リクエスト間隔は、TASK-ACCESS-POLICY-01で策定されたアクセス指針に基づき、定義されたドメイン別の最小アクセス間隔を遵守すること。実際に適用される待機時間は、**システムのドメイン別最小間隔とユーザーが指定した間隔のうち、より長い方**となる。"
  可用性:
    - "NFR-003: 気象庁ウェブサイトが利用可能である限り、システムは動作可能であること。"
    - "NFR-004: HTML取得/解析エラー発生時は、該当日の処理をスキップし、可能な限り処理を継続すること。"
  セキュリティ:
    - "NFR-005: 気象庁ウェブサイトの利用規約を遵守し、DoS攻撃とみなされるようなアクセスを行わないこと。"
  保守性_拡張性:
    - "NFR-006: クリーンアーキテクチャの原則に従い、各コンポーネントが疎結合であること。"
    - "NFR-007: ドメインロジックの変更が、他のレイヤーへの影響を最小限に抑えるように設計されていること (DDD)。"
    - "NFR-008: 新たなデータソースへの対応や出力形式の追加（範囲外だが将来的な拡張として）が比較的容易に行えるようなインターフェース設計を考慮すること。"
    - "NFR-009: Pythonの標準的なコーディング規約（PEP8など）に従い、可読性が高く、変更容易なコードであること（HTML構造変更時はコード修正で対応するため特に重要）。"
    - "NFR-017: 気象庁ウェブサイトへのアクセス指針（User-Agent、アクセス間隔等、TASK-ACCESS-POLICY-01で定義）は、明確に文書化され、コード内で設定箇所が特定しやすく、将来的なポリシー変更に対応しやすい構造であること。"
  テスト容易性:
    - "NFR-010: 各機能はユニットテスト可能であること。特にドメインロジック、アプリケーションロジックは外部依存から切り離してテストできること (TDD, Clean Architecture)。"
    - "NFR-011: 外部API（気象庁ウェブサイト）アクセス部分はモック化可能であること。"
    - "NFR-012: コマンドラインインターフェースからの実行シナリオに対する受け入れテストが実施可能であること。"
  UI_UX_CUI:
    - "NFR-013: コマンドラインのパラメータ指定方法が直感的で分かりやすいこと。ヘルプメッセージが提供されること。"
    - "NFR-014: 進捗表示（処理中日付、残り日数）が明確で、ユーザーが処理状況を容易に把握できること。"
    - "NFR-015: エラーメッセージや警告メッセージが具体的で、ユーザーが問題の原因を理解し対処するのに役立つこと。ログファイル(`wind-research.log`)の確認を促すメッセージは適切に表示すること。"
  実行環境:
    - "NFR-016: 提供されるDockerfileを用いて、依存関係が解決された実行環境を容易に構築できること。"
  備考: "(Clean Architecture観点：非機能要件、特に保守性・拡張性・テスト容易性はアーキテクチャ設計の重要なドライバーとなる)"

受け入れ基準:
  AC_FR_001_CUI:
    - "AC-FR-001-01: 必須パラメータを指定して実行すると、正常に処理が開始されること。"
    - "AC-FR-001-02: 必須パラメータが不足している場合、エラーメッセージが表示され処理が終了すること。"
    - "AC-FR-001-03: `--help` オプションでヘルプメッセージが表示されること。"
    - "AC-FR-001-04: データ取得間隔を4秒に指定して実行すると、リクエストログ等で4秒間隔が確認できること。"
    - "AC-FR-001-05: データ取得間隔を2秒に指定して実行しようとすると、エラーメッセージ（下限3秒違反）が表示され処理が終了すること。"
  AC_FR_002_and_FR_003_データ取得_抽出:
    - "AC-FR-002-01: 特定の日付を指定して実行すると、該当日の気象庁データページのHTMLが取得されること。"
    - "AC-FR-002-02: (テスト用モックサーバー等を用いて) HTML取得エラー発生時、リトライせずエラーログが出力され、該当日の処理がスキップされること。"
    - "AC-FR-003-01: (サンプルHTMLを用いて) 期待される10分毎のデータ（時刻、風向文字列、風速文字列など）が正確に抽出されること。"
    - "AC-FR-003-02: (サンプルHTMLを用いて) 「///」の項目が、後続の変換処理で適切に扱われるよう、欠損を示す文字列として抽出されること。"
  AC_FR_004_データ変換:
    - "AC-FR-004-01: 風向「北西」が `315.0` に変換されること。"
    - "AC-FR-004-02: 風向「静穏」が `-1.0` に変換されること。"
    - "AC-FR-004-03: 風向「///」が `-1.0` に変換されること。"
    - "AC-FR-004-04: 風速「10.5」が `10.5` に変換されること。"
    - "AC-FR-004-05: 風速「///」が `-1.0` に変換されること。"
    - "AC-FR-004-06: 風速「abc」(数字以外) が `-1.0` に変換されること。"
  AC_FR_006_CSV出力:
    - "AC-FR-006-01: (数日分のサンプルデータ処理後) 指定したファイルパスにUTF-8エンコーディングのCSVファイルが生成されること。"
    - "AC-FR-006-02: 生成されたCSVファイルのヘッダー行が定義通り（英語）であること。"
    - "AC-FR-006-03: HTML取得/解析エラーでスキップされた日のデータは、CSV上で日付・時刻列は記録され、他の風況データ項目は空欄になっていること。"
    - "AC-FR-006-04: 同名のCSVファイルが既に存在する場合、`filename(1).csv` のように別名でファイルが作成されること。"
  AC_FR_007_進捗表示:
    - "AC-FR-007-01: 処理開始時、開始メッセージが表示されること。"
    - "AC-FR-007-02: 複数日のデータ取得中、現在処理中の日付と残り日数がCUIに表示され、1日処理ごとに更新されること。"
    - "AC-FR-007-03: 処理完了時、完了メッセージと出力ファイルパスが表示されること。"
    - "AC-FR-007-04: エラーが1件以上ログに記録された場合、処理完了メッセージに加えてログファイルの確認を促すメッセージが表示されること。"
  AC_FR_008_ログ出力:
    - "AC-FR-008-01: HTML取得エラー発生時、エラー内容と対象日がログファイルに記録されること。"
    - "AC-FR-008-02: ログファイルが、実行ファイルやCSVファイルと同じ場所に作成されること。"
  備考: "(TDD観点：これらの受け入れ基準は、自動化された受け入れテストのスクリプトとして実装されることを目指す。)"

用語集:
  風況データ: "本システムで扱う、特定の時間（10分毎）における風向および風速に関するデータ。"
  観測地点: "気象庁が風況データを観測している特定の場所。都道府県番号と地点番号で識別される。"
  取得期間: "データ利用者が風況データを取得したい期間。"
  データ取得間隔: "気象庁ウェブサイトへHTTPリクエストを送信する際の時間間隔。"
  風向数値変換: "文字列で表現される風向を、北を0度とする角度（静穏・欠損は-1）に変換する処理。"
  風速数値変換: "文字列で表現される風速を数値に変換する処理（数字以外や欠損は-1）。"
  CSV: "本システムが出力するファイルの形式。UTF-8エンコーディング。"
  CUI: "本システムのユーザーインターフェース。"
  prec_no: "都道府県番号。"
  block_no: "地点番号。"
  静穏: "風がほとんどない状態を示す風向表現。本システムでは数値-1として扱う。"
  スラッシュ3つ: "気象庁データにおける欠損値を示す表現。本システムでは風向・風速共に数値-1として扱う。"
  スキップ: "データ取得や解析でエラーが発生した際に、その日の処理を中断し、次の日の処理へ移ること。エラーはログに記録される。CSV上では該当日のデータ項目は空欄となる。"
  空欄データ: "CSVファイルにおいて、エラーでスキップされた日の風況データ項目が何も記載されていない状態。"
  備考: "(DDD観点：この用語集はユビキタス言語の基礎となる。)"

制約条件_前提条件:
  技術的制約:
    - "開発言語はPython (バージョン3.8以上を推奨)。"
    - "実行環境はDockerコンテナ。Dockerfileを提供し、必要なライブラリは`pip`でインストールする。"
    - "HTML解析ライブラリの選定は、安定性・確実性を重視しつつ、迅速かつ簡単な実装を優先する。(pandas, beautifulsoup4, lxmlを候補とする)"
    - "コマンドライン引数解析には `argparse` モジュール等の標準的なライブラリを使用する。"
    - "**設定ファイルの利用はしない。** URLテンプレートやHTML要素セレクタ等の変更はコード修正で対応する。"
    - "(新規追加) 依存関係の管理には `pip-tools` を使用し、`requirements.in` から `requirements.txt` を生成する。"
    - "(新規追加) コードの静的解析とフォーマットには `ruff` を、型チェックには `mypy` を使用し、コード品質を維持する。"
    - "(新規追加) 進捗表示機能の実装には `tqdm` ライブラリの利用を推奨する。"
    - "(追記) TASK-ACCESS-POLICY-01で策定されるアクセス指針（User-Agent、ドメイン別最小アクセス間隔など）を強制するためのロジックをadapter-webレイヤーに実装すること。"
  運用上の制約:
    - "システム利用者は、コマンドラインの基本的な操作に習熟していること。"
    - "気象庁ウェブサイトの利用規約を厳格に遵守すること。特に、data.jma.go.jpドメインの「自動化ツール等による過度のアクセスはお控えいただくようお願いいたします。」という警告文を最重要視し、TASK-ACCESS-POLICY-01で策定されたアクセス指針に従って運用すること。"
    - "robots.txtが存在しないため、サイトへの負荷を最小限に抑えるための自主的なアクセス制御と、一般的なウェブスクレイピングのエチケットを常に意識すること。"
  データに関する前提:
    - "気象庁から提供される風況データの形式や精度に依存する。"
    - "風向の16方位表現や「静穏」「///」といった特殊表記のパターンは、事前に定義されたルールに従って変換される。未知のパターンが出現した場合は、エラー（または警告）をログに記録し、-1として扱う。"